pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
cartdata"catcafe_0"SPRITE_META_STR="0b000008087f7f01050502020b080008087f7f01050502020b100008087f7f01050502020b180008087f7f01050502020b200008087f7f01050502020b280008087f7f01050502020b300008087f7f01050502020b380008087f7f01050502020b400008087f7f01050502020b480008087f7f01050502020b500008087f7f01050502020b580008087f7f01050502020b600008087f7f01050502020b000808087f7f01050502020b080808087f7f01050602010b100808087f7f00050602020b700008087f7f01050502020b780008087f7f01050502020b680008087f7f01050502020b180808057f7f01020502020b200808057f7f01020502020b280808057f7f01020502020b300808057f7f01020502020b380808057f7f01020502020b400808057f7f01020502020b480808057f7f01020502020b181207097f7f00030605010b1f0d070b7f7d000c0600070b180d07057f8100020600040b2d0d0d167f7f000f0c06070400100d0d040d10090b04001d031004031d0c100b0f1b0b0d7f7f00000a0a020b3a0d0e0d7f7f00040d0802040f280505041428050704192805060b51080b0e7f7f01090804050b5c080e0e7f7f03090704050b6a080b0e7f7f0109080405047e75020b047d75010b047879050704717907070b3a1a0d0d7f7f01040b0802041a1c0d080b1e240d0d7f7f00040c08020b2b240d0d7f7f00040c08020b002d0a0f7f7f0004090a020b0a2f0c0e7f7f00080905020b1631090c7f7e0007080502046c7b050504557b040504597b0405045d7b050504627b050504677b05050462760505041f310b0d0b75080b0d7f7f0108080405044b760a0a04467d050304417d0503043c79050704377905070b75150b0d7f7f01080804050434790307042b7d090304267d0503045d760505041f7a070604187a07060b003c0a0f7f7f0004090a020675230b067f7e0475290b05046a230b05066a280b087f7c065f230b057f7f065f280b057f7f0654230b097f7c06542c0b0a7f7b0b38270b0e7f7f01080805060b0a3d08097f7f00050703020b123d070c7f7e010a04020504480d08080b2a310d0d7f7f00040c08020476680a0d046c680a0d0462680a0d0458680a0d044e680a0d0444680a0d043a680a0d0430680a0d0b193e08077f7f00040702020b48160a107f7f0004090b020b261207057f7b00080600040b3943090e7f7f00040709020b42430b0b7f7f00040a06020b4d430b0b7f7f00040a06020b5843090b7f7f00050805020b6143070b7f7f00050605020b6843090b7f7f00050805020b3735070e7f7f010a0403050b43270b107f7f00060a09050b714a07057f7f00000604050b714307077f7f00020604010b794307077f7f00020604010b794a07067f7f00010604010b6b160a0d7f7f0008080405065f2d0b067f7d066a300d087f7b0654360b0a7f7a06213e04077f7d04077711090b004b0b0e7f7f01090804050b0b4b0b0e7f7f01090804050b164b0b0e7f7f01090704050b214b0b0e7f7f01090804050b00590e0e7f7f03090704050b0f590e0e7f7f03090704050b52160b0d7f7f01080804050b5d160b0d7f7f0108080405041f7307070b253e090c7f7f0006080502"SPRITE_META={}local e=1while e<#SPRITE_META_STR do function next()local n=tonum(SPRITE_META_STR[e]..SPRITE_META_STR[e+1],1)e+=2return n end local e,n=next(),split"0,0,0,0,0,0,0,0,0,0,0"for e=1,e do n[e]=next()if e==5or e==6then n[e]=n[e]-127end end add(SPRITE_META,n)end function zspr(e,o,l,n,t,i,f)local e=SPRITE_META[e]sspr(e[1],e[2],e[3],e[4],o+e[5],l-e[6],i or e[3],f or e[4],n==true or n==1,t==true or t==1)end function draw_paw(t,o,n,e,i,l)for i=-2,1do local n=n+i*.125+0x.1local n,t=cos(n)*e+t,sin(n)*e+o circfill(n,t,e*.3,l)end for i=0,2do local i=n+.33*i local t,n=cos(i)*e*.3+t+cos(n)*e*-.1,sin(i)*e*.3+o+sin(n)*e*-.1circfill(t,n,e*.4,l)end end function center_print(t,n,e,i,o,l,f)for l in all(split(t,"\n"))do local t=print(l,0,-600)local t=(t-.5)\2if o then rectfill(n-t-1,e-1,n+t+1,e+5,o)if f then rectfill(n-t-2,e,n+t+2,e+4,o)end end print(l,n-t,e,i)e+=8end end function rprint(e,n,t,o)print(e,n-print(e,0,-100),t,o)end function temp_camera(t,o,l)local e,n=peek2(24360),peek2(24362)camera(e+t,n+o)l()camera(e,n)end function draw_cash(e,n,t,o)CASH_SPRS={64,[5]=65,[10]=66,[20]=67}local e=CASH_SPRS[e]temp_camera(-n,-t,function()sfn[[rectfill,0,0,17,36,11
rect,0,0,17,36,3
zspr,63,4,13
]]zspr(e,11,2)zspr(e,2,35-SPRITE_META[e][4])if o then rect(-1,-1,18,37,10)end end)end function contains(e,n)for e in all(e)do if n==e then return true end end return false end function populate_table(e,n)for n in all(split(n))do local n,t=unpack(split(n,"="))if t=="false"then e[n]=false elseif t=="true"then e[n]=true else e[n]=t end end end function string_table(n)local e={}populate_table(e,n)return e end function string_multitable(n)local e={}for n in all(split(n,"\n"))do if#n>3then add(e,string_table(n))end end return e end function up_down_t(t,n,e)local n=e-mid(abs(t-n/2)-(n/2-e),0,e)return n/e end function cos_ease(e)return cos(e/2)*-.5+.5end function sfn(e)for e in all(split(e,"\n"))do if#e>3then local e=split(e)local n=e[1]deli(e,1)_ENV[n](unpack(e))end end end function make_spritepart(n,e,t,o,l,i,f)return{ent=n,spri={e,t,o},xo=l or 0,yo=i or 0,ho=f or 0,get_vars=function(e)local n,t,o=e.spri[1],e.ent.dir,false if t[1]==0then if t[2]<0then n=e.spri[3]end else n=e.spri[2]if t[1]<0then o=true end end return{n,o,SPRITE_META[n]}end,can_rotate=function(e)return e.spri[1]~=e.spri[2]or e.spri[1]~=e.spri[3]end,get_sprite=function(e)return e:get_vars()[1]end,get_top_height=function(e)local e=e:get_vars()[3]return e[4]-e[10]end,get_manual_height=function(e)local e=e:get_vars()[3]return e[11]and e[11]*2+1or e[4]-e[10]end,get_total_height=function(e)return e:get_top_height()+e.ent.height+e.ho end,get_rect=function(t)local o,l,e=unpack(t:get_vars())local o,n=n.x+e[7]-e[5]-e[3]/2+t.xo,n.y+e[8]/2-e[6]-e[4]/2-.5+t.yo return{o,o+e[9],n,n+e[10]}end}end function make_ent(e,n,o,l,t)local e={x=o,y=l,name=e,pal=split"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"}e.parts={}if type(n)=="number"then n={{n,n,n,0,0,0}}end for n in all(n)do local n=pack(unpack(n))add(n,e,1)add(e.parts,make_spritepart(unpack(n)))end e.dir={0,1}populate_table(e,"moveable=false,interactable=false,blocks_placement=true,collides=true,shaking=0,height=0,imm_offset=0,hflip=false,hoppable=true,move_timer=0")if t then populate_table(e,t)end e.update=function(e)e.imm_offset=0if e==selected_ent then if e.interactable then e.outline_color=10else if activity.name=="moving"and not activity.drop_valid then e.outline_color=8else e.outline_color=7end if activity.name=="moving"and is_ent_in_sell_spot(e)then e.outline_color=3end end else e.outline_color=nil end end e.set_spritepart=function(e,n,t,o,l)e.parts[l or 1]=make_spritepart(e,n,t or n,o or n,0,0,0)e:calculate_rect()end e.get_rect=function(e)return e.cached_rect end e.move=function(e,n,t)e.x,e.y=n,t e:calculate_rect()end e.adjust=function(e,n,t)e:move(e.x+n,e.y+t)local o,l,i,f=unpack(e:get_rect())if o<=0or l>=cafe_size[1]*12+1or i<=-2or f>=cafe_size[2]*12then e:move(e.x-n,e.y-t)end end e.rotate=function(e)local n=false for e in all(e.parts)do if e:can_rotate()then n=true end end if not n then return end e.dir={e.dir[2],-e.dir[1]}e:calculate_rect()end e.calculate_rect=function(e)e.cached_rect=e.parts[1]:get_rect()return e.cached_rect end e.shake=function(e)e.shaking=20end e.get_total_height=function(e)return e.parts[#e.parts]:get_total_height()end e:calculate_rect()add(ents,e)return e end function draw_ents()function get_slices(e,n)local o,b,t=unpack(n:get_vars())local l,m,y,i,f,a,c,t,d,r,o={},unpack(t)local t,s=0,e.height\1+n.ho+e.imm_offset\1a+=e.imm_offset\1local d,g,u=n:get_manual_height(),n:get_top_height(),nil a+=n.xo c+=n.yo for n=f,o,-1do local h,p,r=n-1,t+1,1if n==o or t>d then r=o+max(g-d,0)h=0p=f end local o={m,y+h,i,r,e.x-i/2+a,e.y-p-c+o/2-s,i,r,b}if e.move_timer>0then u={e.oldx-e.x,e.oldy-e.y}end l[t+s]={o,e.pal,e.outline_color,n==f,u}if t>d then return l end t+=1end return l end local e={}for n in all(ents)do for t in all(n.parts)do for n,t in pairs(get_slices(n,t))do if not e[n]then e[n]={}end add(e[n],t)end end end for n=0,32do for e in all(e[n])do r,cpal,oc,is_bottom,mp=unpack(e)if oc then memset(24321,oc,15)for e in all{{-1,0},{1,0},{0,1}}do camera(camx+e[1],camy+e[2])sspr(unpack(r))end if is_bottom then camera(camx,camy-1)sspr(unpack(r))end camera(camx,camy)end pal(cpal)if mp then fillp(21845.75)sspr(unpack(r))temp_camera(-mp[1],-mp[2],function()sspr(unpack(r))end)fillp()else sspr(unpack(r))end end pal()if DEBUG_LAYERS==true then print(n,n%8*8-20,-30+n\8*8,8)flip()while(not btn(5))_update_buttons()
while(btn(5))_update_buttons()
end end DEBUG_LAYERS=false end function make_blocker(e,n,t,o)local e=make_ent(1,e,n,-127)e.collides=false e.draw=function(e)local e,n,t,o=e:get_rect()rectfill(e,t,n,o,15)end e.get_rect=function(e)return e.x,e.x+t,e.y,e.y+o end return e end function collide_ents(t,f)local e,n,t,o,l,i=0,0,unpack(t:get_rect())local f,a,d,r=unpack(f:get_rect())if o>f and t<a and i>=d and l<=r then local t,o,l,i,f,a=o-f,a-t,i-d,r-l,1,1if t<o then e=t f=-1else e=o end if l<i then n=l a=-1else n=i end if abs(e)<abs(n)then return{e*f,0}else return{0,n*a}end end return{0,0}end function point_in_ent(n,t,e)local e=e:get_rect()return n>=e[1]and n<=e[2]and t>=e[3]and t<=e[4]end function make_player(e,n)local e=make_ent("player",{{40,41,42,0,0}},e,n,"hoppable=false,snack_time=0")e.control=function(e)if e.snack_time>0then e.snack_time-=1local n=e.snack_time%10>5and 124or 125e:set_spritepart(n)e.dir={0,1}else local n,t=-tonum(btn(0))+tonum(btn(1)),-tonum(btn(2))+tonum(btn(3))if abs(n)>0and abs(t)>0then n=n*.707t=t*.707end e.x+=n*1.5e.y+=t*1.5if abs(n)>0or abs(t)>0then if abs(n)>abs(t)then e.dir={n<0and-1or 1,0}else if t>0then e.dir={0,1}else e.dir={0,-1}end end if time\4%2==0then e:set_spritepart(118,time\8%2==0and 122or 123,120)else e:set_spritepart(119,41,121)end else e:set_spritepart(40,41,42)end end for n in all(ents)do if n.collides and n~=e then local n=collide_ents(e,n)e.x+=n[1]e.y+=n[2]end end e.x=mid(e.x,5,cafe_size[1]*12-4)e.y=mid(e.y,1,cafe_size[2]*12-1)local n={e.dir[1]*6+e.x,e.dir[2]*6+e.y}selected_ent=nil for e in all(ents)do if not e.taken and(e.moveable or e.interactable)then if point_in_ent(n[1],n[2],e)then if btnp(B_CONFIRM)then if e.interactable then e:interact()else activity=moving_activity(e)end end selected_ent=e break end end end if not selected_ent then local o,n=999,nil for t in all(cats)do local e,l=e.x-t.x,e.y-t.y local e=sqrt(e*e+l*l)if e<23and e<o then n=t o=e end end e.nearest_cat=n if btnp(B_CONFIRM)and n then e.snack_time=30n:walk_to(e.x+rnd(12)-6,e.y+rnd(12)-6)end end end e.get_rect=function(e)return e:calculate_rect()end return e end CUST_PALS={"01,02,03,04,05,06,07,08,09,10,01,12,01,14,04","01,02,03,04,05,06,07,08,09,10,04,12,13,14,15","01,02,03,04,05,06,07,08,09,10,00,12,00,14,02","01,02,03,04,05,06,07,08,09,10,01,12,04,14,13"}BREAKFAST_END=2400LUNCH_END=3600function generate_desires()local n,e,t=get_menu(),{},rnd(split"1,1,1,1,2,2,2,3,4")for t=1,t do if contains(n,"latte")and rnd()<.5then add(e,"latte")elseif contains(n,"cappuccino")and rnd()<.25then add(e,"cappuccino")elseif contains(n,"espresso")and rnd()<.25then add(e,"espresso")else add(e,"drip coffee")end if rnd()<(daytime>BREAKFAST_END and.2or 0)+.2then add(e,"savory pastry")end if rnd()<(daytime<=BREAKFAST_END and.3or 0)+.1then add(e,"sweet pastry")end end return e end function make_customer()local e=make_ent("customer",OBJECT_SPRITES.customer,door.x+2,door.y+8)populate_table(e,"state=entering,state_timer=0,total_time=0,move_timer=10,oldx=0,oldy=-999,is_customer=true,status_timer=0")today_stats["customers"]+=1e.pal=split(rnd(CUST_PALS))e.pal[12]=rnd(split"1,2,3,4,5,12")local n=rnd(split"7,6,9,11")e.pal[6]=n if rnd()<.5then e.pal[7]=n else e.pal[7]=rnd(split"7,6,9,10")end e.hair=rnd{{76,113,77},{78,114,79},{80,113,81},{82,115,83}}e.hc=rnd(split"10,1,2,2,4,4,9,6")if e.pal[15]==2or e.pal[15]==4then e.hc=1end e.pal[4]=e.hc e.desires=generate_desires()e.parts[2]=make_spritepart(e,e.hair[1],e.hair[2],e.hair[3],0,-2,10)e.cats_seen={}local n=e.move e.move=function(e,t,o)e.oldx,e.oldy=e.x,e.y e.move_timer=10n(e,t,o)end e.set_status=function(e,n)e.status_timer=90e.status=n end e.set_state=function(e,n)e.state=n e.state_timer=0end e.enter_line=function(e,n)if#customer_queue<3then add(customer_queue,e)e:move(register.x+rnd(4)-2,register.y-#customer_queue*9)e:set_state("queued")e.order={}local t=get_menu()e.sale=0for n in all(e.desires)do if contains(t,n)then add(e.order,{n,prices[n]})e.sale+=prices[n]end end if n then if rnd()<#e.cats_seen*.2then local n=(rnd(e.sale)+1)\1add(e.order,{"tip",n})e.sale+=n end end local n=rnd()if n<.1then e.given=((e.sale-.5)\5+1)*5elseif n<.3then e.given=((e.sale-.5)\10+1)*10elseif n<.8then e.given=((e.sale-.5)\20+1)*20elseif n<.9then e.given=((e.sale-.5)\50+1)*50else e.given=((e.sale-.5)\100+1)*100end else e:leave(true)end end e.leave=function(e,n)e:set_state("leave")e:move(door.x-4,door.y+6)if n then e:set_status("ᶜc⁶:0014001c22000000")end end e.update=function(e)e.height=0if e.move_timer>0then e.move_timer-=1end if e.state=="entering"then if e.state_timer>60then e:enter_line()end elseif e.state=="queued"then e.dir={0,1}if e.state_timer>=300and e.state_timer%180==0then e:set_status("⁶:0000000049000000")end if daytime>closing_ticks-60or e.state_timer>=900then e:leave(e.state_timer>=900)next_customer()end elseif e.state=="leave"then e.dir={0,-1}if e.state_timer>30then del(customers,e)del(ents,e)end elseif e.state=="seated"then e.height=2if e.state_timer>600then if rnd()<.5then e.seat.taken=false e:leave()else e.seat.taken=false e.desires=generate_desires()e:enter_line(true)end end if daytime>closing_ticks-120then e.seat.taken=false e:leave()end elseif e.state=="paid"then if e.state_timer>10then local n=get_seats(true)if#n>0and rnd()<.75and daytime<closing_ticks-120then e.seat=rnd(n)e.seat.taken=true e:move(e.seat.x,e.seat.y+e.seat.dir[2]*2)e.dir=e.seat.dir e:set_state("seated")else e:leave()end end end end return e end function init_customers()customer_queue={}customers={}walkin_timer=0end cat_check_index=1function update_customers()if walkin_timer<=0and#customers<5and daytime<closing_ticks-240then local e=make_customer()add(customers,e)local e=stats["appeal"]\1/4+.75walkin_timer=(350+rnd(300))/e\1end walkin_timer-=1for n=1,#customers do local e=customers[n]e.state_timer+=1e.status_timer=max(e.status_timer-1,0)if n==cat_check_index then for n in all(cats)do if not contains(e.cats_seen,n.name)then local t,o=n.x-e.x,n.y-e.y if abs(t)<10and abs(o)<10then add(e.cats_seen,n.name)e:set_status("ᶜ8⁶:143e3e1c08000000 ᶜ1"..n.name)add_star(e.x,e.y-8)end end end end end cat_check_index=cat_check_index%#customers+1end function next_customer()deli(customer_queue,1)for e in all(customer_queue)do e:move(e.x,e.y+9)end end CAT_NAMES=split"bella,tigger,chloe,shadow,luna,oreo,oliver,kitty,lucy,molly,jasper,smokey,gizmo,simba,tiger,charlie,angel,jack,lily,peanut,toby,baby,loki,gracie,milo,princess,sophie,harley,max,missy,rocky,zoe,coco,misty,nala,oscar,pepper,sasha,buddy,pumpkin,kiki,mittens,bailey,callie,lucky,patches,simon,garf,george,maggie,sammy,sebastian,boots,cali,felix,lilly,phoebe,sassy,tucker,bandit,dexter,fiona,jake,precious,romeo,snickers,socks,daisy,midnight,lola,sadie,sox,casper,fluffy,marley,minnie,sweetie,ziggy,belle,brownie,chester,frankie,ginger,muffin,murphy,rusty,scooter,batman,boo,cleo,izzy,jasmine,mimi,sugar,cupcake,dusty,leo,noodle,panda,peaches"CAT_EYES={[0]=split"10,11,12,7,9",[1]=split"10,11,12,7,9",[2]=split"10,11,6,7,0,9",[4]=split"10,11,12,7,0",[6]=split"12,7,0,1,2,3",[9]=split"1,2,3,0",[10]=split"12,0,1,2"}CAT_SHADOWS=split"0,0,1,X,2,X,5,X,X,4,9"function generate_cat_features(n,e)local e=e or{}e.name=CAT_NAMES[n]local t=rnd()srand(n)e.index=n e.base_color=rnd(split"0,1,2,4,6,9,10")e.eye_color=rnd(CAT_EYES[e.base_color])if contains(split"0,1,2,3",e.eye_color)then e.portrait_pupil_color=e.eye_color e.portrait_iris_color=6else e.portrait_pupil_color=0e.portrait_iris_color=e.eye_color end e.portrait_border_color=1if contains(split"0,1,2",e.base_color)then e.portrait_border_color=7end function drnd()return(rnd()+rnd()+rnd())/3end e.prop_sit=drnd()*1.8+.2e.prop_speed=drnd()*.25+.125e.prop_run=drnd()*.5+.125e.prop_annoying=drnd()*.5+.125e.prop_active=drnd()*.5+.2e.portrait=rnd(split"89,90,91,92,93,94,95,96")srand(t)e.pal=split"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"e.pal[4]=e.base_color e.pal[2]=CAT_SHADOWS[e.base_color+1]e.pal[10]=e.eye_color e.pal[11]=e.portrait_iris_color e.pal[8]=e.portrait_pupil_color e.pal[12]=e.portrait_border_color e.outline_color=1if e.base_color==0or e.base_color==1then e.outline_color=0end return e end function make_cat(e,n,t)local n=make_ent("cat",1,n,t)populate_table(n,"state=sitting,state_timer=0,hopping_up=0,hop_time=0,debug_hitbox=false,collides=true,sit_time=0,boost_time=0")generate_cat_features(e,n)n.set_state=function(e,n)e.state=n e.state_timer=0end n.walk_to=function(e,n,t)e:set_state("walking")e.walk_target={n,t}end n.pick_random_state=function(e)if rnd()<e.prop_active then local t=get_sitting_spots()if#t>0and rnd()<n.prop_annoying then local n=rnd(t)e:walk_to(n.x,n.y)else e:walk_to((rnd(cafe_size[1]-1)+.5)*12,(rnd(cafe_size[2]-1)+.5)*12)end if rnd()<e.prop_run then e.boost_time=e.prop_run*80end elseif rnd()<.35then e:set_state("belly")elseif rnd()<.35then e:set_state("playing")else e:set_state("sitting")e.sit_time=(120+rnd(120))*e.prop_sit end end n.update=function(e)e.boost_time-=1if e.state=="sitting"then e:set_spritepart(1)if e.state_timer>e.sit_time then e:pick_random_state()end elseif e.state=="playing"then e:set_spritepart(e.state_timer<10and 1or 23+e.state_timer\5%4)if e.state_timer>120then e:pick_random_state()end elseif e.state=="belly"then e:set_spritepart(e.state_timer<30and 1or 23)if e.state_timer>120then e:pick_random_state()end elseif e.state=="walking"then local n,t=e.walk_target[1]-e.x,e.walk_target[2]-e.y e.dir={sgn(n),0}local o,l=sqrt(n*n+t*t),e.boost_time>0and 2or 1local n={n/o*e.prop_speed*l,t/o*e.prop_speed*l}if e.hopping_up~=e.height then e.hop_time+=1if e.height>e.hopping_up then e.height-=.5e:set_spritepart(87)end if e.height<e.hopping_up then e.height+=.5e:set_spritepart(14+min(e.hop_time\(8/l),1))end e:move(e.x+n[1]/8,e.y+n[2]/8)else e:set_spritepart(2+e.state_timer\8%6)e.hopping_up=0e:move(e.x+n[1],e.y+n[2])for t in all(ents)do if t~=e and t.collides then local n=collide_ents(e,t)if n[1]~=0or n[2]~=0then if not t.hoppable then if e.state_timer>30and rnd()<.5then e:set_state("sitting")else e.walk_target[1]=e.x+sgn(n[1])*8e.walk_target[2]=e.y+sgn(n[2])*8end e:move(e.x+n[1],e.y+n[2])else local n=0for t in all(t.parts)do local e=collide_ents(e,t)if e[1]~=0or e[2]~=0then n=max(n,t:get_total_height())end end e.hopping_up=max(e.hopping_up,n)e.hop_time=0end end end end if o<3then e:pick_random_state()end end end end return n end function update_cats()for e in all(cats)do e.state_timer+=1end end OBJECT_SPRITES=string_multitable[[customer=62/112/68/0/0/0
chair=27/27/27/0/0/0|29/28/99/0/0/5
bookshelf=30/30/30/0/0/0
table=36/98/36/0/0/0
register=53/53/53/0/0/0
drip machine=84/84/84/0/0/0
grinder=86/86/86/0/0/0
espresso=52/52/52/0/0/0
frother=85/85/85/0/0/0
pastries=97/97/97/0/0/0
counter=88/88/88/0/0/0
cabinet=101/100/102/0/0/0
couch1=103/103/103/0/0/0
couch2=104/104/104/0/0/0
couch3=105/105/105/0/0/0
plant1=106/106/106/0/0/0
table2=107/107/107/0/0/0
chair2=108/108/108/0/0/0|109/110/111/0/0/5
door=35/35/35/0/0/0
cream=116/116/166/0/0/0
]]for e in all(OBJECT_SPRITES)do for n,t in pairs(e)do local e,t={},split(t,"|")for n in all(t)do add(e,split(n,"/"))end OBJECT_SPRITES[n]=e end end BILLS={1,5,10,20}function action_buy_grinder()prices["drip coffee"]=3end function play_activity()return{name="play"}end function moving_activity(e,n)return{name="moving",ent=e,drop_valid=true,counter_only=n,selected_counter=1}end function register_activity(e)return{name="register",customer=e,selected_bill=1,sale=e.sale,given=e.given,change=e.given-e.sale,bills={}}end function phone_activity()cats_menu={}for e in all(cats_available)do add(cats_menu,{img=e.portrait,img_pal=e.pal,title=e.name,type="adopt_cat",features=e})end return{name="phone",tree={scroll_page=8,children={{img=55,title="info",scroll_page=8,children={}},{img=56,title="furniture",scroll_page=4,children=string_multitable[[sspr=24/13/7/14,title=chair,type=buy_floor,sprite=chair,price=15,description=always good to have more seating
sspr=56/0/7/12,title=chair2,type=buy_floor,sprite=chair2,price=25
img=103,title=couch 1,type=buy_floor,sprite=couch1,price=25,description=left side sectional
img=104,title=couch 2,type=buy_floor,sprite=couch2,price=25,description=center sectional
img=105,title=couch 3,type=buy_floor,sprite=couch3,price=25,description=right side sectional
img=36,title=table,type=buy_floor,sprite=table,price=30,stat=appeal,stat_value=0.5,description=customers usually expect tables
img=107,title=table2,type=buy_floor,sprite=table2,price=30,stat=appeal,stat_value=0.5,description=customers usually expect tables
img=30,title=bookshelf,type=buy_floor,sprite=bookshelf,price=50,stat=max_cats,stat_value=0.25,description=cats might like to climb it
img=100,title=counter,type=buy_floor,sprite=cabinet,price=50,is_counter=true,description=can fit appliances or serve as decoration
img=106,title=plant,type=buy_floor,sprite=plant1,price=8,description=plant,stat=appeal,stat_value=0.1,hoppable=false
]]},{img=57,title="appliances",scroll_page=4,children=string_multitable[[img=53,title=register,type=buy_counter,price=100,sprite=register
img=127,title=auto-reg,type=autoreg,price=100,description=automatically run the register!
img=84,title=drip machine,type=buy_counter,price=50,sprite=drip machine
img=116,title=cream+sug,type=buy_counter,price=20,sprite=cream,stat=appeal,stat_value=0.25,description=self serve cream and sugar packets
img=86,title=grinder,type=buy_counter,price=35,sprite=grinder,fn=action_buy_grinder,description=raises drip coffee price +$1
img=97,title=pastries,type=buy_counter,price=40,sprite=pastries,menu=sweet pastry/savory pastry,description=adds pastries to the menu
img=52,title=espresso,type=buy_counter,price=100,sprite=espresso,stat=appeal,stat_value=0.5,menu=espresso,description=adds espresso to the menu
img=85,title=frother,type=buy_counter,price=100,sprite=frother,stat=appeal,stat_value=1.0,menu=cappuccino/latte,requires=espresso,description=adds espresso milk drinks to the menu
]]},{img=60,title="floorplan",scroll_page=4,children=string_multitable[[img=58,title=6x6 cafe,price=150,type=floorplan,planx=6,plany=6
img=58,title=7x6 cafe,price=600,type=floorplan,planx=7,plany=6
img=58,title=7x7 cafe,price=1100,type=floorplan,planx=7,plany=7
img=58,title=8x7 cafe,price=2000,type=floorplan,planx=8,plany=7
img=58,title=9x7 cafe,price=5000,type=floorplan,planx=9,plany=7
            ]]},{img=59,title="adopt!",scroll_page=4,children=cats_menu}}},cursor={1}}end function get_phone_state()local e=activity.tree for n=1,#activity.cursor-1do e=e.children[activity.cursor[n]]end local n=activity.cursor[#activity.cursor]return e,n end prices={["drip coffee"]=2,espresso=4,latte=5,cappuccino=5,["sweet pastry"]=4,["savory pastry"]=5}function get_menu()local e={"drip coffee"}for n in all(ents)do if n.menu then for n in all(n.menu)do add(e,n)end end end return e end function get_seats(t)local n,o={},split"chair,couch 1,couch 2,couch 3,chair2"for e in all(ents)do if contains(o,e.name)then if not t or not e.taken then add(n,e)end end end return n end function get_counters(t)local n={}for e in all(ents)do if e.is_counter and(not t or not e.counter_item)then add(n,e)end end return n end function get_sitting_spots()local e={}for n in all(get_counters(true))do add(e,n)end for n in all(get_seats(true))do add(e,n)end return e end function is_ent_in_sell_spot(e)if e.cost==nil then return false end local e=e:get_rect()return e[2]>door.x-4and e[1]<door.x+4and e[3]<=door.y+4end function has_ent(e)for n in all(ents)do if n.name==e then return true end end return false end function get_max_cats()local e=sqrt(stars)/3.17return stats["max_cats"]+e end state_game={}state_game.start=function()cafe_size={6,5}ents={}cats_available={}local e={}for n=1,100do add(e,n)end for n=1,16do local n=rnd(#e)\1+1local t=e[n]deli(e,n)add(cats_available,generate_cat_features(t))end milestones=string_table"phoned=false,opened=false,closed=false"description_t=0autoreg_time=0make_ent("table",OBJECT_SPRITES["table"],51,16,"moveable=true,cost=20")make_ent("chair",OBJECT_SPRITES["chair"],52,6,"moveable=true,cost=40")local e,n=make_ent("counter",47,6,44,"is_counter=true"),make_ent("counter",49,30,44,"is_counter=true")make_ent("counter",50,43,44,"is_counter=true")make_ent("counter",51,54,45,"is_counter=true")make_ent("counter",75,54,55,"is_counter=true")drip=make_ent("drip machine",84,2,34,"hoppable=false")drip.height=e:get_total_height()e.counter_item=drip drip:move(e.x,e.y)register=make_ent("register",53,27,34,"hoppable=false,interactable=true")register.height=n:get_total_height()register.interact=function(e)if#customer_queue>0then activity=register_activity(customer_queue[1])else end end n.counter_item=register register:move(n.x,n.y)day_num=1door=make_ent("door",OBJECT_SPRITES["door"],31,-5)player=make_player(31,8)money=250stars=0selected_ent=nil activity=play_activity()stats={max_cats=1,appeal=1.5}init_customers()cats={}time=0daytime=0hints={}closing_time=13closing_ticks=600*(closing_time-7)cafe_open=false bump_money=0 bump_stars=0 bump_change=0particle_stars={}today_stats=string_table"customers=0,stars earned=0,sales=0,tips=0,total=0"today_stats_order=split"customers,stars earned,sales,tips,total"end function hint(e)hints[1]={text=e,time=0}end function add_star(e,n)add(particle_stars,{x=e+rnd(4)-2,y=n+rnd(4)-2,time=time})today_stats["stars earned"]+=1end function add_money(e)money+=e bump_money=10end function complete_change()local e=customer_queue[1]autoreg_time=0add_money(e.sale)local n=0if e.order.tip then n=e.order.tip end today_stats["sales"]+=e.sale-n today_stats["tips"]+=n today_stats["total"]+=e.sale e:set_state("paid")next_customer()activity=play_activity()end function end_day()milestones["closed"]=true reporthints=split"hint: customers\ngive you a star for\neach cat they meet,hint: appliances\ncan expand your\nmenu and earn you\nmore money,hint: buying\nfurniture will\nattract more\ncustomers,hint: customers\nare more likely to\ntip if they meet\nsome cats"time=0daytime=0save()for n=1,400do fillp(.5+(-2<<n))rectfill(0,0,127,127,1)fillp()if n>16then rectfill(23,7,104,120,1)rectfill(24,8,103,119,7)center_print("day "..day_num.." report",64,11,1)line(30,19,97,19,1)for e=1,#today_stats_order do local t=today_stats_order[e]if n>e*30+15then print(t,27,24+e*11,1)end if n>e*30+25then local n=(e>2and"$"or"")..today_stats[t]print(n,100-print(n,0,-100),24+e*11,0)end end if n>200then if reporthints[day_num]then print(reporthints[day_num],27,94,1)end end end flip()end day_num+=1today_stats=string_table"customers=0,stars earned=0,sales=0,tips=0,total=0"cafe_open=false end state_game.update=function()door.interactable=false time=(time+1)%32767if not cafe_open then if not milestones["opened"]and time>60and daytime==0then door.outline_color=time%32<16and 10or nil end door.interactable=true if daytime==0then door.interact_text="open cafe"door.interact=function(e)cafe_open=true milestones["opened"]=true time=30end else door.interact_text="go home"door.interact=function(e)end_day()end end end if activity.name~="phone"then if cafe_open then daytime+=1if daytime>=closing_ticks then cafe_open=false end update_customers()end update_cats()for e in all(ents)do e:update()end end if#hints>0then hints[1].time+=1if hints[1].time>150then deli(hints,1)end end if activity.name~=register and#customer_queue>0and autoreg then autoreg_time+=1if autoreg_time>150then complete_change()end end if activity.name=="play"then player:control()if btnp(B_BACK)then activity=phone_activity()end elseif activity.name=="moving"then local n,t,o=activity.ent,tonum(btnp(1))-tonum(btnp(0)),tonum(btnp(3))-tonum(btnp(2))activity.drop_valid=true if activity.counter_only then local e=get_counters()if activity.ent.cost then add(e,door)end activity.selected_counter=(activity.selected_counter+t+o-1)%#e+1local e=e[activity.selected_counter]n:move(e.x,e.y+(e==door and 4or 0))n.height=e:get_total_height()if e.counter_item then e.counter_item.imm_offset=5end if btnp(B_CONFIRM)then if is_ent_in_sell_spot(activity.ent)then del(ents,activity.ent)money+=activity.ent.cost activity=play_activity()else if e.counter_item then local n=e.counter_item e.counter_item=activity.ent activity=moving_activity(n,true)selected_ent=n else e.counter_item=activity.ent activity=play_activity()end end end else n:adjust(t*2,o*2)for e in all(ents)do if e~=n then local e=collide_ents(n,e)if e[1]~=0or e[2]~=0then activity.drop_valid=false break end end end if btnp(B_CONFIRM)then if is_ent_in_sell_spot(activity.ent)then del(ents,activity.ent)money+=activity.ent.cost activity=play_activity()else if activity.drop_valid then activity=play_activity()else end end end end if btnp(B_BACK)then activity.ent:rotate()end elseif activity.name=="phone"then local e,t=get_phone_state()local n,o=activity.cursor,tonum(btnp(3))-tonum(btnp(2))if o~=0then description_t=0end n[#n]=mid(t+o,1,#e.children)if btnp(B_CONFIRM)then local e=e.children[t]if not e.price or money>=e.price then money-=e.price and e.price or 0if e.children then add(n,1)activity.scroll=0elseif e.type=="autoreg"then autoreg=true register:set_spritepart(127)register.interact=nil activity=play_activity()elseif e.type=="floorplan"then local t,n=e.planx-cafe_size[1],e.plany-cafe_size[2]for e in all(get_counters())do e:move(e.x,e.y+n*12)if e.counter_item then e.counter_item:move(e.counter_item.x,e.counter_item.y+n*12)end end activity=play_activity()cafe_size={e.planx,e.plany}elseif e.type=="buy_floor"then local t,n="moveable=true"if e.is_counter then t="is_counter=true"end n=make_ent(e.title,OBJECT_SPRITES[e.sprite],door.x,door.y+10,t)if e.stat then stats[e.stat]+=e.stat_value end n.hoppable=e.hoppable or true activity=moving_activity(n)selected_ent=n n.cost=e.price elseif e.type=="buy_counter"then if#get_counters(true)==0then hint"no counter space"elseif has_ent(e.title)then hint"already owned"elseif e.requires and not has_ent(e.requires)then hint(e.title.." requires "..e.requires)else local n=make_ent(e.title,OBJECT_SPRITES[e.sprite],25,0,"hoppable=false")n.menu=split(e.menu,"/")n.cost=e.price selected_ent=n if e.fn then _ENV[e.fn]()end activity=moving_activity(n,true)end elseif e.type=="adopt_cat"then if has_ent(e.title)then hint("already adopted "..e.title.."!")elseif#cats>=get_max_cats()\1then hint"reached maximum cats"else add(cats,make_cat(e.features.index,door.x-3,door.y+8))stats["appeal"]+=.5activity=play_activity()end end else hint"not enough money"end end if btnp(B_BACK)then if#n==1then activity=play_activity()else deli(n,#n)end end elseif activity.name=="register"then local e=tonum(btnp(1))-tonum(btnp(0))activity.selected_bill=mid(activity.selected_bill+e,1,4)if btnp(B_CONFIRM)then local e=BILLS[activity.selected_bill]add(activity.bills,e)activity.change-=e bump_change=4end if activity.change==0then complete_change()elseif activity.change<0or#activity.bills>10then activity.change=activity.given-activity.sale activity.bills={}hint"wrong change"end if btnp(B_BACK)then activity=play_activity()end end end state_game.draw=function()local e,i={},nil cls(7)for e=0,5do for n=0,5do local t,o,n=n*26+3+e%2*8,e*30+3+n*2,e*1.3103+n*.73draw_paw(t,o,n,sin(e/7)*2.65+9.5,7,6)end end local n,t=cafe_size[1],cafe_size[2]local n,t=n*12,t*12local o,l=(n-128)\2,(t-128)\2-8camera(o,l)camx,camy=o,l rect(-1,-17,n+1,t+1,2)rect(-2,-18,n+2,t+2,4)rect(-3,-19,n+3,t+3,2)for e=0,cafe_size[1]-1do for n=0,cafe_size[2]-1do zspr(31,e*12,n*12)end zspr(34,e*12,-16)end sfn[[zspr,33,-1,-16
zspr,32,5,-14
zspr,32,13,-14
zspr,32,39,-14
zspr,32,47,-14
zspr,32,55,-14
zspr,37,41,-10
zspr,38,49,-12
zspr,39,57,-11
]]zspr(33,n-1,-16)if activity.name=="moving"and not activity.counter_only then clip(-o,-l,n,t)fillp(24415.5)local e=activity.ent:get_rect()rectfill(e[1]-4,e[3]-4,e[2]+5,e[4]+5,7)fillp()clip()end draw_ents()for e in all(customers)do if e.status_timer>0then center_print(e.status,e.x,e.y-15,1,7,nil,true)end end if activity.name=="moving"then if activity.counter_only then local e=get_counters()for e in all(e)do local t,n=e.x,e.y n-=e:get_total_height()rect(t-1,n-1,t+1,n+1,7)end else e={"place","rotate"}end if activity.ent.cost then zspr(117,door.x-9,door.y-12+time\16%2)end end if activity.name=="play"then if selected_ent then e={"move"}if selected_ent.interactable then e={selected_ent.interact_text or"use"}end elseif player.nearest_cat then e={"call "..player.nearest_cat.name}zspr(126,player.nearest_cat.x-4,player.nearest_cat.y-15)end e[2]="phone"end camera()local n=print(money,0,-100)zspr(44,0,3,false,false,n+10)zspr(43,n+10,3)zspr(45,2,5)print(money,9,6-bump_money\4,1)bump_money=max(bump_money-1,0)n=print(stars,0,-100)zspr(44,117-n,3,false,false,n+11)zspr(43,115-n,3,true)zspr(46,120,5)print(stars,119-n,6-bump_stars\4,1)bump_stars=max(bump_stars-1,0)for n in all(particle_stars)do local e=(time-n.time)/32e=e^3local t,o=(n.x-o)*(1-e)+120*e,(n.y-l)*(1-e)+5*e zspr(46,t,o)if e>=1then stars+=1del(particle_stars,n)end end local t,n=daytime\50*5%60,7+daytime\600time_str=(n<13and n or n-12)..":"..(t<10and"0"or"")..t..(n<12and" am"or" pm")center_print(cafe_open and"open"or"closed",64,2,cafe_open and 0or 8)if not cafe_open then if daytime==0then time_str="6:59 am"else time_str=closing_time-12 ..":01 pm"end end center_print(time_str,64,9,0)if activity.name=="phone"then e={"select","back"}local n,f=get_phone_state()sfn[[rectfill,41,4,88,103,1
rectfill,36,9,93,98,1
rectfill,38,6,91,101,7
zspr,54,36,4
zspr,54,89,4,1
zspr,54,36,99,,1
zspr,54,89,99,1,1
camera,-38,-8
clip,38,8,54,92
]]local t,e=3,n.children if n.title then center_print(n.title,26,0,2)t=12if n.title=="info"then e={{title="max cats",value=get_max_cats(),description="collect stars to adopt more cats"},{title="appeal",value=stats["appeal"],description="more appeal = more customers"},{title="seats",value=#get_seats(),description="customers will stay longer if they can sit"},{title="cafe menu:",color=2}}for n in all(get_menu())do add(e,{title=n})end end n.children=e end local o=(f-1)\n.scroll_page+1local l,a=(o-1)*n.scroll_page+1,#e\n.scroll_page for a=l,min(l+n.scroll_page-1,#e)do local e=e[a]local l=n.title=="appliances"and has_ent(e.title)l=l or e.type=="adopt_cat"and has_ent(e.title)local o,n=2,5if e.price or e.type=="adopt_cat"then n=13end if f==a then rectfill(0,t-2,53,t+n+1,l and 6or 10)i=e.description end local i=e.sspr and split(e.sspr,"/")or SPRITE_META[e.img]if i then local d,f,i,l=unpack(i)local t,a=1,t if i<10then t+=(10-i)\2else i=10end if l<n then a+=(n-l)\2else f+=(l-n)\2l=n end if e.img_pal then pal(e.img_pal)end sspr(d,f,i,l,t,a)pal()o+=11elseif e.value then print(e.value\1,o+3,t,0)for n=0,1,.025do local t,o=sin(n)*-4.3+o+4.5,-cos(n)*4.3+t+2.5pset(t,o,n<e.value%1and 8or 6)end o+=12else end print(e.title,o,t,l and 5or e.color)if e.price then print("$"..e.price,o,t+7,l and 5or(e.price>money and 8or 0))end t+=n+5end if#e>n.scroll_page then if o>1then zspr(71,24,7)end if o<a then zspr(71,24,81,false,true)end center_print(o.."/"..a,26,87,0)end clip()camera()elseif activity.name=="register"then e={"pick"}local e=0if#activity.bills>5then e=2end for n=1,#activity.bills do draw_cash(activity.bills[n],72+n*(5-e),65)end local n=activity.customer.order local e=76-7*#n rect(1,e,61,80,6)rectfill(2,e,60,80,7)for n=0,6do zspr(70,1+9*n,e-3)end y=72for e in all(n)do print(e[1],4,y,5)rprint(e[2],58,y,1)y-=7end sfn[[rectfill,0,80,127,127,6
line,0,80,127,80,1
rect,-1,87,43,118,5
rectfill,43,81,127,123,5
rect,43,81,127,123,1
rectfill,0,88,42,117,7
rectfill,0,107,42,115,10
print,sale,10,91,1
print,change,2,109,1
]]for e=1,4do draw_cash(BILLS[e],24+e*21,85,activity.selected_bill==e)end local n,t,e=activity.sale,"+"..activity.given,activity.change rprint(n,43,91,1)rprint(t,43,99,3)local n=print(e,0,-100)if bump_change>0then rectfill(42-n,108,42,114,11)end print(e,43-n,109,bump_change>0and 7or 8)end bump_change=max(bump_change-1,0)local n=3if e[1]then zspr(73,3,120)n=print(e[1],12,121,0)+8end if e[2]then zspr(74,n,120)print(e[2],n+9,121,0)end if#hints>0then local n=hints[1]local e=up_down_t(n.time,150,7)*8rectfill(0,127-e,127,135-e,10)center_print(n.text,64,129-e,0)end if i then sfn[[rectfill,0,109,127,119,6
rectfill,0,110,127,118,7
]]local e=print(i,0,-100)if e>125then local n=e-125+16clip(0,1,127,126)local e=mid(n-abs(description_t\2%(n*2)-n)-8,0,e-125)camera(e)end print(i,1,112,1)camera()description_t+=1end if time<16then fillp(.5+(32768>>time))rectfill(0,0,127,127,1)end fillp()end function save()end function load()money,stars=peek2(24064),peek2(24066)for e=0,15do local e=peek(24068+e)if e>0then add(cats,make_cat(e,door.x-3,door.y+8))end end for e=0,128,4do local e,n,t,o=peek(24084+e),peek(24084+e+1),peek(24084+e+2),peek(24084+e+3)end autoreg=peek(24212)end poke(24412,8)poke(24413,2)B_CONFIRM=5B_BACK=4function _init()set_state(state_game)end function set_state(e,n)current_state=e e.start(n)end function _update()current_state.update()end function _draw()current_state.draw()pal(split"130,132,3,4,134,6,7,8,9,10,11,140,143,14,15,0",1)end
__gfx__
00000000000024040000240400002404000024040000240400002404000024040000240400002404000000000000000000000000000024040000000000000000
00000000000044440000444400004444000044440000444400004444000044440000444400004444000024040000240400002404000044440000000000000000
0000240400004a4a00004a4a00004a4a00004a4a00004a4a00004a4a00004a4a00004a4a00004a4a00004444000044440000444400004a4a0000240400000000
0000444440004444400044444000444440004444400044444000444440004444400044444000444440004a4a40004a4a40004a4a400044444000444440002404
40444a4a4444422044444220444442204444422044444220444442204444422044444220444442204444444444444444444444444444422044444a4a44444444
44424444044444000444440004444400044424000444240004444400044444000444440004444400044442200444422004444220044444400444444404444a4a
04442220442020406420240006440450020640205400420004500240442002404400204004420400004240000042400000400060044000564420422044444444
04446460605050060055006005000600500060050606005006000600650000566500050606050060005606000056600000520000052000006050506065046220
00240400002404000024040000002404000024040000240400000400000004000006040000000400000011111000000001111100000001111100000011111000
00444400004444000044440040004444040044444000444400004a4400064a4400042a4400604a440001888881000001188888100000188888100001fffff100
004a4a40004a4a40004a4a4044424a4a44424a4a44424a4a60624440600424406004244060042440001888888810001888888881000188888881001fffffff10
40244400404422004044445044224444244244444442444444424a4444442a4444442a4444442a440018fffff81001888888f881000188111881001fffffff10
44462500444244254442200062262226624622266446222664462444644624446446244464462444018fffffff810188888ffff1001881888188101fbfffbf10
04224000044440600444440001111100000000000000001111111111100111111111111044400000018fcfffcf8118188fffcff10018f18881f8101fbfdfbf10
0444000004440000044400601010101010000000000001ddddddddddd11444444444444140000000001fcfdfcf100101f8ffcffd1001ff888ff10001fffff100
0605000005200000052000001101011110000000000001ddddddddddd112222222222221440000000001fffff10000001ffffff100001ff8ff10001667f76610
ddddddddddddd555555555001010101110000000000001ddddddddddd11444444444444144224040001979997910000011777710000197777791016666766661
dfffffffffffd5777777750011010111100000000000014ddddddddd41144444444444414424444001997777799100001999971000199999999911f6667666f1
dffdddddddffd577777775001111111110000001111101444444444441144444444444416424a4a401f9777779f10000019fcc10001f9999999f101ccccccc10
dfdddddddddfd5777777750015fff511100000101010112222222222211222222222222100424440001c77777c100000001cc1000001c99999c10001cc1cc100
dfdddddddddfd577777775001fffff110000001101011144444444444114444444444441000462500001cc1cc1000000001cc10000001cc1cc10000111011100
dfdddddddddfd577777775001fffff11000000101010114cc2882bff411222222222222100000000000111011100000000111110000011101110000011111000
dfdddddddddfd577777775001fffff11000000110101114cc2882bff4101111111111110011111111000011111000000111110000000011111000001fffff100
dfdddddddddfd5777777750015fff511000000000000014cc2882bff41012000000002101424444241001888881000018888810000001fffff10001fffffff10
dfdddddddddfd5777777750021111120000000000000014cc2882bff4101200000000210142444424101888888810018888888100001fffffff1001fffffff10
dfdddddddddfd577777775001200021000000000000001422222222241012000000002101424444241018fffff810018fffff8100001fffffff1001fffffff10
dffdddddddffd55555555500110001100000000000000144444444444101111111111100142444424118fffffff8118fffffff810001ffffbff1001fffffff10
dfffffffffffd000022222220000000000000000000001498c22cb994104444444444410142444424118fcfffcf8118fcfffcf810001ffffbffd1001fffff100
ddddddddddddd000211111112011111111111110000001498c22cb994104444444444410142444424101fcfdfcf1001fcfdfcf1000001ffffff1011666666610
2225555555555552111111111215555555555550000001498c2cb29941044444444444101424444241001fffff100001fffff100000016666710016666666661
222ffffffffffff2111111111215555555555550000001498c2cb29941044444444444101424444241019799979100197999791000001661671001f6666666f1
242ffffffffffff2111111111215555555555550000001422222222241044444444444101424444241019117119100191f1f1910000001661610001c66666c10
242ffffffffffff2111111111215555555555550000001444444444441044444444444101424444241019cfcfc910019ccccc9100000001cfcc10001cc1cc100
242ffffffffffff211111111121555555555555000000141111111114104444444444410122222222101111c1111000111c111000000000111c1000111011100
242ffffffffffff21111111112111111111111100000011000000000110222222222221001111111100011101110000111011100000000000011000000000000
242ffffffffffff21111111112011111111111100000000000000000000222222222210001200002100000000000000000000000000000111000000000000000
242ffffffffffff21111111112000011111111111111111111111111000222222222210001200002100000011111000000111110000001141100000011111000
242ffffffffffff21111111112000044444444444444444444444444000111111111110001200002100000144444100001444441000014444410000144444100
242ffffffffffff21111111112000044444444444444444444444444000110000000110000000000000001444444410014444444100144444441001444444410
242ffffffffffff11111111111000014444444444444444444444444000111110000001111100000000014440004441004400044000044000440000400444400
242ffffffffffff66677776776777644444444444444444444444444001111111000014444410000000014000000041000000000000000000000000000044400
242ffffffffffff77767777676666614444444444444444444444444006111116000144444441000000014000000041000111110000001111100000000000000
242ffffffffffff66776776776777644444444444444444444444444116766556111444444444100000014000000041001444441000014444410000011111000
24222222222222277676666666676644444444444444444444444444106766556011444444444100000014000000041014444444100144414441000144444100
11111111111111167676677766767622222222222222222222222222016766556101444444444100000000000000000004444444000044141440001444444410
11111111100000000000677760666012222222222222222222222222006766556001244444442100000000011111000000000000000004141400000444444400
44444444410000000000766670000012222222222222222222222222006766556000124444421000000000144444100000111110000000141000000000000000
44444444410000000000000000000012111111111111111111111111006716556000012222210000000001444444410001444441000000010000000000000000
444444444100011000000000000000110000000000000000000000000067615b6000001111100000000014444444441014444444100000111110000000000000
4444444441651871556000007700000044f4fdfffd01111111111100006766586000000010000000000014444444441014400000000001444441000000000000
44444444416617716665000777000004dfffdfffdf14444444444410006761556000000010000000000014444444441004000000000014444444100000000000
44444444416661166661001777111114fffdfffdff14444444444410000711150000000010000000000014444444441000000000000144400004000000000000
444444444177777777700017775bbb1fffdfffdfff14444444444410000011100000000414000000000014044444041000000000000144000000000000000000
244444444151155111500011115bbb14fdfffdfffd1444444444441000b300000000000444000000000000440004400000000000001400000000000000000000
1444444441555555155000155555551fdfffdfffdf1444444444441b30b300000000000111000000000000000000000000000000001400000000000000000000
0222222220555555555000166666661dfffdfffdff1444444444441b30bbbb000000000000000000000000111110000000000000000100000000000000000000
0122222210655555556000161616161fffdfffdfff1444444444441030b033000000000000000000000001444441000000000000000000000000000000000000
0122222210611111116000166666661ffdfffdfffd022222222222000b3000000000000000000000000014444444100000000000000000000000000000000000
0121111210611111116000155555551fdfffdfffdf01222222222100bb0bb0000000000000000000000014444000000000000000000000000000000000000000
0110000110566666665000155555551dfffdfffdff012222222221003bb330000000000000000000000014440000000000000000000000000000000000000000
1444444441055555550000111111111fffdfffdfff0121111111210000b000000000000000000000000014400000000000000000000000000000000000000000
1444444441000066000011100000000ffdfffdfffd0110000000110001b100000000000000000000000014400000000000000000000000000000000000000000
14444444410006006001000107777777707700077000000000000000013100000000000000000000000001440000000000000000000000000000000000000000
14444444410000006010222017000000706660777000000000000000011100000000000000000000000001400000000000000000000000000000000000000000
144444444100000060712221777aa7aa706601777111110000000000022200000000000000000000000000000000000000000000000000000000000000000000
144444444105550565721112779495497011017775bbb10000000000022200000000000000000000000000000000000000000000000000000000000000000000
144444444165550565072227079945997000011115bbb10000000000011100000000000000000000000000000000000000000000000000000000000000000000
14444444410616055500727005555555576061555555510000000000011111111011111111111111111111110011111111111111111111100011111000000011
144444444106150111006751011111111110113333333100000000000144444410144444444411444444444101111111111111111111111101fffff100000151
144444444101110000006651000000000000013b333b310000000000014444441114444444441144444444411111111111111111111111111151015100111151
02222222200000000000685000000000000001333333310000000000014444441114444444441144444444411111fffffffffffffffff11111fffff101fff151
012222221000000000016651000000000000013bbbbb31000000000001444444101444444444114444444441111fffffffffffffffffff1111fffff101fff151
0122222210000000000111110000000000000133333331000000000001444444101444444444114444444441111fffffffffffffffffff111155555101555551
012111121000000000000000000000000000011111111100000000000144444410122222222211222222222115515fff5ffffff5ffff51551011111000111110
01100001100000000000000000000000000000000000000000000000014444441112112221121122222222211551111111111111111111551000100000111110
00011111000000111110000001111100000011111000000000000000014444441112222222221122222222211555555555555555555555551000100001fffff1
00188888100001888881000018888810000188888100000000000000012222221012111111121121111111211555555555555555555555551004140001f111f1
01888888810018888888100188888881001888888810000000000000012222221012000000021120000000211100000000000000000000011004440001155511
018fffff810018fffff810018811188100188111881000000000000001222222100000000000000000000000000000000000000000000000000111000151f151
18fffffff8118fffffff811881888188118818881881000000000000012111121000000000000000000000000000000000000000000000000000000000111110
18fcfffcf8118fcfffcf8118f18881f8118f18881f81000000000000012000021000000000000000000000000000000000000000000000000000000000000000
01fcfdfcf1001fcfdfcf1001ff888ff1001ff888ff10000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011fffff100001fffff110001ff8ff111111ff8ff100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
19979997910019799979910017777799119977777100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
11977777110011777779110199999991001999999910000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01977771f1001f177779101f999999910019999999f1000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001117771000017771110001c99999c0000c99999c10000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001111100000011111000001111cc100001cc111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000000000110000000001110000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000111110000000000111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011888881000000011888881000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00188888888100000188888888100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01888888f88100001888888f88100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0188888ffff10000188888ffff100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
18188fffcff100018188fffcff100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101f8ffcffd1000101f8ffcffd10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001ffffff100000001ffffff100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001997771000000019777771000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001119199f100000019199971100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000111cc19100000001f11ccc1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001cc11c11000000011c11cc110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001c10111000000001c0001c100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001111010000000001110001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000c000000000000000000c4224444424cf42ccccc24c44c00000cc44c0000c44c0000000c
00000000000000000000000000000000000000000000000000ccc000cf000cc00000c00000cc44242222442cfff2244424c444ccccc4cff4c00c2f44ccccccc2
0000000000000000000000000000000000000000000000000c4f4c0c4f000c4c00004c00cc4c2442b8b224c0cf24444224c4222444224fffc00c2f4442244422
0000000000000000000000000000000000000000000000000ccff4c4ff000cf4c00c44cc44424242b8bb22c0c244444442c2244444442f442cc22f4444244222
000000000000000000000000000000000000000000000000c4cf4444ff000cf44cc244224444224bb8b244c0c211444114c2411141114442442244448b242b82
000000000000000000000000000000000000000000000000c4c4844842000c444224422444444244bbb442c0c1bb441bb42418b1418b24444444444b8b442b8b
00000000000000000000000000000000000000000000000044c4bf4b2200c4442222c244444bbb44444422c04b8b44b8b4c24bb444bb24441114112bbb442bbb
0000000000000000000000000000000000000000000000004cc472742200c442bb22c22bbb4b8bff444242c0444ff4444424444fff442441b8b48b2244fff211
0000000000000000000000000000000000000000000000004ccb27272b00c42b8b42424b8b4444f7744422c0447f774444c44244f4424224444ff424447f7721
000000000000000000000000000000000000000000000000c0c4b777b2cc24444444c424444f4417774222c02771771144422444144424444442244447717722
0000000000000000000000000000000000000000000000000c444bbb2244242bb4f10c4444ff417112222c00c217117772244411411422444444244447171772
00000000000000000000000000000000ccccc00000000000c4444422224f22b8b4f10fcf4441142222244c000c2777772c422444444422244422224471777177
0000000000000000000000000000000cc7c7cc00000000004444422222ccc22221120c424114404444444c0000c27222c0c222222224222244444c7777777777
0000000000000000000000000000000ccc7ccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
0000000000000000000000000000000cc7c7cc000000000000000000000000000000000000033333330000000000000000444440000000000000000000000710
00000003333333333333333300000000ccccc0000000000000000000000000000000000000003003003000000000000100404040000000000000000000000771
000000033773777373337333000000000ccc00000000000000000000000000000000000000000300300300000000001110444440000000000000000000000771
0000000373337333733373330000000000c000000000000000007773333333333000000000000300000330000000000100404040000000000000900077377771
00000003777377337333733308888800ccccc0000000000000007773000330003000000000000300000300000000000000444440000000000009a90073337771
0000000333737333733373338877788cc7c7cc000000000000007773333333333000000000000303000300cc000030033000300900090000199a999937377771
0123000377337773777377738878788ccc7ccc00000000000000777000000000000000000000030000030c00c000333303003009999900111099999073337771
4567000333333333333333338877788cc7c7cc00c0000600060077733303000033033300003030000003000cc333300303333339090901117009990077373761
89ab0000000000333000000018888811ccccc10ccc00676067607773030333333303033333333333330000000300333303003009999901177009090073337610
cdef0000000000030000000001111100111110ccccc67776777607030333300033330330003000000030000c0300300330003000999011777090009077377100
__meta:title__
catcafe
by morganquirk
